name: Publish ToruVault to PyPI

on:
  push:
    branches: [main]
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (default: 0.1.0)'
        required: false
        default: '0.1.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -r requirements.txt
        
    - name: Verify package structure
      run: |
        echo "Verifying package structure..."
        find . -type f -name "*.py" | sort
        echo "\nChecking for ToruVault in package:"
        grep -r "toru-vault" --include="*.toml" --include="*.py" .
        grep -r "toru_vault" --include="*.py" .
        
    - name: Update version in setup.py
      run: |
        # Extract version from release tag or use input value
        if [[ "${{ github.event_name }}" == "release" ]]; then
          VERSION="${{ github.ref_name }}"
          # Remove 'v' prefix if present
          VERSION="${VERSION#v}"
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          # For push events, increment patch version
          VERSION="$(grep -oP "version=\"\K[0-9]+\.[0-9]+\.[0-9]+" setup.py)"
          if [ -z "$VERSION" ]; then
            VERSION="0.1.0"
          fi
        fi
        
        echo "Using version: $VERSION"
        
        if [ -f "setup.py" ]; then
          sed -i "s/version=.*,/version='$VERSION',/g" setup.py
        else
          echo "setup.py not found, please ensure it exists with proper version configuration"
          exit 1
        fi
        
    - name: Build package
      run: python -m build
      
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository-url: https://upload.pypi.org/legacy/
        packages-dir: dist
        skip-existing: true
        verify-metadata: true
